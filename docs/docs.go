// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Fluire API Support",
            "email": "yarik1448kuzmin@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/albums/": {
            "post": {
                "description": "Create new album by sent object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Create Album",
                "parameters": [
                    {
                        "description": "Album info",
                        "name": "album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.albumCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album created",
                        "schema": {
                            "$ref": "#/definitions/http.albumCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/albums/feed": {
            "get": {
                "description": "Feed albums",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Album Feed",
                "responses": {
                    "200": {
                        "description": "Albums feed",
                        "schema": {
                            "$ref": "#/definitions/models.AlbumTransfer"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/albums/search": {
            "post": {
                "description": "Find amount of albums by search-query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Find Albums",
                "parameters": [
                    {
                        "description": "Query for search",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.searchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Albums found",
                        "schema": {
                            "$ref": "#/definitions/delivery.searchAlbumsResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/albums/{albumID}/": {
            "get": {
                "description": "Get album with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Get Album",
                "responses": {
                    "200": {
                        "description": "Album got",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AlbumTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete album with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Delete Album",
                "responses": {
                    "200": {
                        "description": "Album deleted",
                        "schema": {
                            "$ref": "#/definitions/http.albumDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/albums/{albumID}/like": {
            "post": {
                "description": "Set like by user to chosen album (add to favorite)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Set like",
                "responses": {
                    "200": {
                        "description": "Like set",
                        "schema": {
                            "$ref": "#/definitions/http.albumLikeResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/albums/{albumID}/tracks": {
            "get": {
                "description": "All tracks of album with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Tracks of Album",
                "responses": {
                    "200": {
                        "description": "Show tracks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/albums/{albumID}/unlike": {
            "post": {
                "description": "Remove like by user from chosen album (remove from favorite)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Remove like",
                "responses": {
                    "200": {
                        "description": "Like removed",
                        "schema": {
                            "$ref": "#/definitions/http.albumLikeResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/artists/": {
            "post": {
                "description": "Create new artist by sent object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Create Artist",
                "parameters": [
                    {
                        "description": "Track info",
                        "name": "artist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.artistCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist created",
                        "schema": {
                            "$ref": "#/definitions/http.artistCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/artists/feed": {
            "get": {
                "description": "Feed artists",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Artist Feed",
                "responses": {
                    "200": {
                        "description": "Artists feed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ArtistTransfer"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/artists/search": {
            "post": {
                "description": "Find amount of artists by search-query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Find Artists",
                "parameters": [
                    {
                        "description": "Query for search",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.searchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artists found",
                        "schema": {
                            "$ref": "#/definitions/delivery.searchArtistsResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/artists/{artistID}/": {
            "get": {
                "description": "Get artist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Get Artist",
                "responses": {
                    "200": {
                        "description": "Artist got",
                        "schema": {
                            "$ref": "#/definitions/models.ArtistTransfer"
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete artist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Delete Artist",
                "responses": {
                    "200": {
                        "description": "Artist deleted",
                        "schema": {
                            "$ref": "#/definitions/http.artistDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/artists/{artistID}/albums": {
            "get": {
                "description": "All albums of artist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Albums of Artist",
                "responses": {
                    "200": {
                        "description": "Show albums",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AlbumTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/artists/{artistID}/like": {
            "post": {
                "description": "Set like by user to chosen artist (add to favorite)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Set like",
                "responses": {
                    "200": {
                        "description": "Like set",
                        "schema": {
                            "$ref": "#/definitions/http.artistLikeResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/artists/{artistID}/tracks": {
            "get": {
                "description": "All tracks of artist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Tracks of Artist",
                "responses": {
                    "200": {
                        "description": "Show tracks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/artists/{artistID}/unlike": {
            "post": {
                "description": "Remove like by user from chosen artist (remove from favorite)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Remove like",
                "responses": {
                    "200": {
                        "description": "Like removed",
                        "schema": {
                            "$ref": "#/definitions/http.artistLikeResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign In",
                "parameters": [
                    {
                        "description": "username and password",
                        "name": "userInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.loginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/http.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "description": "Logout account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log Out",
                "responses": {
                    "200": {
                        "description": "User loged out",
                        "schema": {
                            "$ref": "#/definitions/http.logoutResponse"
                        }
                    },
                    "400": {
                        "description": "Logout fail",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/auth/signup": {
            "post": {
                "description": "Create account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign Up",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.signUpInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/http.signUpResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/": {
            "post": {
                "description": "Create new playlist by sent object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Create Playlist",
                "parameters": [
                    {
                        "description": "Playlist info",
                        "name": "playlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.playlistCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist created",
                        "schema": {
                            "$ref": "#/definitions/http.playlistCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/feed": {
            "get": {
                "description": "Feed playlists",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Playlist Feed",
                "responses": {
                    "200": {
                        "description": "Playlist feed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PlaylistTransfer"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/search": {
            "post": {
                "description": "Find amount of playlists by search-query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Find Playlists",
                "parameters": [
                    {
                        "description": "Query for search",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.searchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlists found",
                        "schema": {
                            "$ref": "#/definitions/delivery.searchPlaylistsResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/{playlistID}/": {
            "get": {
                "description": "Get playlist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Get Playlist",
                "responses": {
                    "200": {
                        "description": "Playlist got",
                        "schema": {
                            "$ref": "#/definitions/models.PlaylistTransfer"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete playlist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Delete Playlist",
                "responses": {
                    "200": {
                        "description": "Playlist deleted",
                        "schema": {
                            "$ref": "#/definitions/http.defaultResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/{playlistID}/cover": {
            "post": {
                "description": "Update playlist cover",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Upload Cover",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Cover file",
                        "name": "cover",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cover updated",
                        "schema": {
                            "$ref": "#/definitions/http.defaultResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid form data",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User Unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/{playlistID}/like": {
            "post": {
                "description": "Set like by user to chosen playlist (add to favorite)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Set like",
                "responses": {
                    "200": {
                        "description": "Like set",
                        "schema": {
                            "$ref": "#/definitions/http.defaultResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/{playlistID}/tracks": {
            "get": {
                "description": "All tracks of playlist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Tracks of Playlist",
                "responses": {
                    "200": {
                        "description": "Show tracks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/{playlistID}/tracks/{trackID}": {
            "post": {
                "description": "Add track into playlist",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Add Track",
                "responses": {
                    "200": {
                        "description": "Track added",
                        "schema": {
                            "$ref": "#/definitions/http.playlistCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete track from playlist",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Delete Track",
                "responses": {
                    "200": {
                        "description": "Track deleted",
                        "schema": {
                            "$ref": "#/definitions/http.playlistCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/{playlistID}/unlike": {
            "post": {
                "description": "Remove like by user from chosen playlist (remove from favorite)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Remove like",
                "responses": {
                    "200": {
                        "description": "Like removed",
                        "schema": {
                            "$ref": "#/definitions/http.defaultResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/playlists/{playlistID}/update": {
            "post": {
                "description": "Update playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Update Playlist",
                "parameters": [
                    {
                        "description": "Playlist info",
                        "name": "playlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.playlistUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist updated",
                        "schema": {
                            "$ref": "#/definitions/http.defaultResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/tracks/": {
            "post": {
                "description": "Create new track by sent object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Create Track",
                "parameters": [
                    {
                        "description": "Track info",
                        "name": "track",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.trackCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track created",
                        "schema": {
                            "$ref": "#/definitions/http.trackCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/tracks/feed": {
            "post": {
                "description": "Feed tracks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Track Feed",
                "parameters": [
                    {
                        "description": "Feed info",
                        "name": "tfi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.trackFeedInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracks feed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackTransfer"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/tracks/search": {
            "post": {
                "description": "Find amount of tracks by search-query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Find Tracks",
                "parameters": [
                    {
                        "description": "Query for search",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.searchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracks found",
                        "schema": {
                            "$ref": "#/definitions/delivery.searchTracksResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect body",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/tracks/{trackID}/": {
            "get": {
                "description": "Get track with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Get Track",
                "responses": {
                    "200": {
                        "description": "Track got",
                        "schema": {
                            "$ref": "#/definitions/models.TrackTransfer"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete track with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Delete Track",
                "responses": {
                    "200": {
                        "description": "Track deleted",
                        "schema": {
                            "$ref": "#/definitions/http.trackDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "No such track",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/tracks/{trackID}/like": {
            "post": {
                "description": "Set like by user to chosen track (add to favorite)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Set like",
                "responses": {
                    "200": {
                        "description": "Like set",
                        "schema": {
                            "$ref": "#/definitions/http.trackLikeResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/tracks/{trackID}/listen": {
            "post": {
                "description": "Add one listen of track by current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Increment track's listens",
                "responses": {
                    "200": {
                        "description": "Listen added",
                        "schema": {
                            "$ref": "#/definitions/http.trackIncrementListensResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/tracks/{trackID}/unlike": {
            "post": {
                "description": "Remove like by user from chosen track (remove from favorite)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Remove like",
                "responses": {
                    "200": {
                        "description": "Like removed",
                        "schema": {
                            "$ref": "#/definitions/http.trackLikeResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/": {
            "get": {
                "description": "Get user with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "responses": {
                    "200": {
                        "description": "User got",
                        "schema": {
                            "$ref": "#/definitions/models.UserTransfer"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Can't get user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/avatar": {
            "post": {
                "description": "Update user avatar",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Upload Avatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Avatar file",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar updated",
                        "schema": {
                            "$ref": "#/definitions/http.userUploadAvatarResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid form data",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User Unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/favorite/albums": {
            "get": {
                "description": "Get user's favorite albums",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Albums",
                "responses": {
                    "200": {
                        "description": "Albums got",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AlbumTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/favorite/artists": {
            "get": {
                "description": "Get user's favorite artists",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Artists",
                "responses": {
                    "200": {
                        "description": "Artists got",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ArtistTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/favorite/playlists": {
            "get": {
                "description": "Get user's favorite playlists",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Playlists",
                "responses": {
                    "200": {
                        "description": "Playlists got",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PlaylistTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/favorite/tracks": {
            "get": {
                "description": "Get ser's avorite tracks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Tracks",
                "responses": {
                    "200": {
                        "description": "Tracks got",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden user",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/playlists": {
            "get": {
                "description": "All playlists of user with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Playlists of User",
                "responses": {
                    "200": {
                        "description": "Show playlists",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PlaylistTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/update": {
            "post": {
                "description": "Update info about user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update Info",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.userInfoInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User info updated",
                        "schema": {
                            "$ref": "#/definitions/http.userUploadAvatarResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "User Unathorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "403": {
                        "description": "User hasn't rights",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Can't change user info",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.searchAlbumsResponse": {
            "type": "object",
            "properties": {
                "albums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AlbumTransfer"
                    }
                }
            }
        },
        "delivery.searchArtistsResponse": {
            "type": "object",
            "properties": {
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArtistTransfer"
                    }
                }
            }
        },
        "delivery.searchPlaylistsResponse": {
            "type": "object",
            "properties": {
                "playlists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PlaylistTransfer"
                    }
                }
            }
        },
        "delivery.searchRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "delivery.searchTracksResponse": {
            "type": "object",
            "properties": {
                "tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TrackTransfer"
                    }
                }
            }
        },
        "http.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "http.albumCreateInput": {
            "type": "object",
            "properties": {
                "artists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cover": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.albumCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.albumDeleteResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.albumLikeResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.artistCreateInput": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.artistCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.artistDeleteResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.artistLikeResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.defaultResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.loginInput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "http.loginResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.logoutResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.playlistCreateInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "http.playlistCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.playlistUpdateInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "http.signUpInput": {
            "type": "object",
            "properties": {
                "avatarSrc": {
                    "type": "string"
                },
                "birthDate": {
                    "$ref": "#/definitions/models.Date"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "http.signUpResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.trackCreateInput": {
            "type": "object",
            "properties": {
                "albumID": {
                    "type": "integer"
                },
                "albumPosition": {
                    "type": "integer"
                },
                "artistsID": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "record": {
                    "type": "string"
                }
            }
        },
        "http.trackCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.trackDeleteResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.trackFeedInput": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "integer"
                }
            }
        },
        "http.trackIncrementListensResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.trackLikeResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.userInfoInput": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "$ref": "#/definitions/models.Date"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "http.userUploadAvatarResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "models.AlbumTransfer": {
            "type": "object",
            "properties": {
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArtistTransfer"
                    }
                },
                "cover": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isLiked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ArtistTransfer": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isLiked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Date": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "models.PlaylistTransfer": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isLiked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserTransfer"
                    }
                }
            }
        },
        "models.TrackTransfer": {
            "type": "object",
            "properties": {
                "albumID": {
                    "type": "integer"
                },
                "albumPosition": {
                    "type": "integer"
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArtistTransfer"
                    }
                },
                "cover": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "isLiked": {
                    "type": "boolean"
                },
                "listens": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "recordSrc": {
                    "type": "string"
                }
            }
        },
        "models.UserTransfer": {
            "type": "object",
            "properties": {
                "avatarSrc": {
                    "type": "string"
                },
                "birthDate": {
                    "$ref": "#/definitions/models.Date"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.1",
	Host:             "localhost:4443",
	BasePath:         "/api/albums/feed",
	Schemes:          []string{},
	Title:            "Fluire API",
	Description:      "Server API for Fluire Streaming Service Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
