basePath: /api/albums/feed
definitions:
  http.albumCreateInput:
    properties:
      artistsID:
        items:
          type: integer
        type: array
      cover:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  http.albumCreateResponse:
    properties:
      id:
        type: integer
    type: object
  http.albumDeleteResponse:
    properties:
      status:
        type: string
    type: object
  http.artistCreateInput:
    properties:
      avatar:
        type: string
      name:
        type: string
    type: object
  http.artistCreateResponse:
    properties:
      id:
        type: integer
    type: object
  http.artistDeleteResponse:
    properties:
      status:
        type: string
    type: object
  http.loginInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  http.loginResponse:
    properties:
      jwt:
        type: string
    type: object
  http.logoutResponse:
    properties:
      status:
        type: string
    type: object
  http.signUpResponse:
    properties:
      id:
        type: integer
    type: object
  http.trackCreateInput:
    properties:
      albumID:
        type: integer
      artistsID:
        items:
          type: integer
        type: array
      cover:
        type: string
      name:
        type: string
      record:
        type: string
    type: object
  http.trackCreateResponse:
    properties:
      id:
        type: integer
    type: object
  http.trackDeleteResponse:
    properties:
      status:
        type: string
    type: object
  internal_pkg_album_delivery_http.errorResponse:
    properties:
      message:
        type: string
    type: object
  internal_pkg_artist_delivery_http.errorResponse:
    properties:
      message:
        type: string
    type: object
  internal_pkg_auth_delivery_http.errorResponse:
    properties:
      message:
        type: string
    type: object
  internal_pkg_track_delivery_http.errorResponse:
    properties:
      message:
        type: string
    type: object
  models.AlbumTransfer:
    properties:
      artists:
        items:
          $ref: '#/definitions/models.ArtistTransfer'
        type: array
      cover:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.ArtistTransfer:
    properties:
      cover:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.Date:
    properties:
      time.Time:
        type: string
    type: object
  models.Sex:
    enum:
    - M
    - F
    - O
    type: string
    x-enum-varnames:
    - Male
    - Female
    - Other
  models.TrackTransfer:
    properties:
      albumID:
        description: TODO discuss
        type: integer
      artists:
        items:
          $ref: '#/definitions/models.ArtistTransfer'
        type: array
      cover:
        type: string
      id:
        type: integer
      name:
        type: string
      record:
        type: string
    type: object
  models.User:
    properties:
      avatar:
        type: string
      birthDate:
        $ref: '#/definitions/models.Date'
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      sex:
        $ref: '#/definitions/models.Sex'
      username:
        type: string
    type: object
host: localhost:4443
info:
  contact: {}
  description: Server API for Fluire Streaming Service Application
  title: Fluire API
  version: 1.0.1
paths:
  /api/albums/:
    post:
      consumes:
      - application/json
      description: Create new album by sent object
      parameters:
      - description: album info
        in: body
        name: album
        required: true
        schema:
          $ref: '#/definitions/http.albumCreateInput'
      produces:
      - application/json
      responses:
        "200":
          description: Album created
          schema:
            $ref: '#/definitions/http.albumCreateResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
      summary: Create Album
      tags:
      - Album
  /api/albums/{albumID}/:
    delete:
      description: Delete album with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Album deleted
          schema:
            $ref: '#/definitions/http.albumDeleteResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
      summary: Delete Album
      tags:
      - Album
    get:
      description: Get album with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Album got
          schema:
            $ref: '#/definitions/models.AlbumTransfer'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
      summary: Get Album
      tags:
      - Album
  /api/albums/{albumID}/tracks:
    get:
      description: All tracks of album with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Show tracks
          schema:
            items:
              $ref: '#/definitions/models.TrackTransfer'
            type: array
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
      summary: Tracks of Album
      tags:
      - Album
  /api/albums/feed:
    get:
      description: Feed albums
      produces:
      - application/json
      responses:
        "200":
          description: Albums feed
          schema:
            items:
              $ref: '#/definitions/models.AlbumTransfer'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
      summary: Album Feed
      tags:
      - Feed
  /api/artists/:
    post:
      consumes:
      - application/json
      description: Create new artist by sent object
      parameters:
      - description: Track info
        in: body
        name: artist
        required: true
        schema:
          $ref: '#/definitions/http.artistCreateInput'
      produces:
      - application/json
      responses:
        "200":
          description: Artist created
          schema:
            $ref: '#/definitions/http.artistCreateResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_artist_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_artist_delivery_http.errorResponse'
      summary: Create Artist
      tags:
      - Artist
  /api/artists/{artistID}/:
    delete:
      description: Delete artist with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Artist deleted
          schema:
            $ref: '#/definitions/http.artistDeleteResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_artist_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_artist_delivery_http.errorResponse'
      summary: Delete Artist
      tags:
      - Artist
    get:
      description: Get artist with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Artist got
          schema:
            $ref: '#/definitions/models.ArtistTransfer'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_artist_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_artist_delivery_http.errorResponse'
      summary: Get Artist
      tags:
      - Artist
  /api/artists/{artistID}/albums:
    get:
      description: All albums of artist with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Show albums
          schema:
            items:
              $ref: '#/definitions/models.AlbumTransfer'
            type: array
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_album_delivery_http.errorResponse'
      summary: Albums of Artist
      tags:
      - Artist
  /api/artists/{artistID}/tracks:
    get:
      description: All tracks of artist with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Show tracks
          schema:
            items:
              $ref: '#/definitions/models.TrackTransfer'
            type: array
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
      summary: Tracks of Artist
      tags:
      - Artist
  /api/artists/feed:
    get:
      description: Feed artists
      produces:
      - application/json
      responses:
        "200":
          description: Artists feed
          schema:
            items:
              $ref: '#/definitions/models.ArtistTransfer'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_artist_delivery_http.errorResponse'
      summary: Artist Feed
      tags:
      - Feed
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login account
      parameters:
      - description: username and password
        in: body
        name: userInput
        required: true
        schema:
          $ref: '#/definitions/http.loginInput'
      produces:
      - application/json
      responses:
        "200":
          description: User created
          schema:
            $ref: '#/definitions/http.loginResponse'
        "400":
          description: Incorrect input
          schema:
            $ref: '#/definitions/internal_pkg_auth_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_auth_delivery_http.errorResponse'
      summary: Sign In
      tags:
      - Auth
  /api/auth/logout:
    get:
      consumes:
      - application/json
      description: Logout account
      produces:
      - application/json
      responses:
        "200":
          description: User loged out
          schema:
            $ref: '#/definitions/http.logoutResponse'
        "400":
          description: Logout fail
          schema:
            $ref: '#/definitions/internal_pkg_auth_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_auth_delivery_http.errorResponse'
      summary: Log Out
      tags:
      - Auth
  /api/auth/signup:
    post:
      consumes:
      - application/json
      description: Create account
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User created
          schema:
            $ref: '#/definitions/http.signUpResponse'
        "400":
          description: Incorrect input
          schema:
            $ref: '#/definitions/internal_pkg_auth_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_auth_delivery_http.errorResponse'
      summary: Sign Up
      tags:
      - Auth
  /api/tracks/:
    post:
      consumes:
      - application/json
      description: Create new track by sent object
      parameters:
      - description: Track info
        in: body
        name: track
        required: true
        schema:
          $ref: '#/definitions/http.trackCreateInput'
      produces:
      - application/json
      responses:
        "200":
          description: Track created
          schema:
            $ref: '#/definitions/http.trackCreateResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
      summary: Create Track
      tags:
      - Track
  /api/tracks/{trackID}/:
    delete:
      description: Delete track with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Track deleted
          schema:
            $ref: '#/definitions/http.trackDeleteResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
      summary: Delete Track
      tags:
      - Track
    get:
      description: Get track with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Track got
          schema:
            $ref: '#/definitions/models.TrackTransfer'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
      summary: Get Track
      tags:
      - Track
  /api/tracks/feed:
    get:
      description: Feed tracks
      produces:
      - application/json
      responses:
        "200":
          description: Tracks feed
          schema:
            items:
              $ref: '#/definitions/models.TrackTransfer'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_pkg_track_delivery_http.errorResponse'
      summary: Track Feed
      tags:
      - Feed
swagger: "2.0"
