// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package http

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson40dcd6ddDecodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp(in *jlexer.Lexer, out *userUploadAvatarResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson40dcd6ddEncodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp(out *jwriter.Writer, in userUploadAvatarResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.String(string(in.Status))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v userUploadAvatarResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson40dcd6ddEncodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *userUploadAvatarResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson40dcd6ddDecodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp(l, v)
}
func easyjson40dcd6ddDecodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp1(in *jlexer.Lexer, out *userInfoInput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "birthDate":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BirthDate).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson40dcd6ddEncodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp1(out *jwriter.Writer, in userInfoInput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"birthDate\":"
		out.RawString(prefix)
		out.Raw((in.BirthDate).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v userInfoInput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson40dcd6ddEncodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp1(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *userInfoInput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson40dcd6ddDecodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp1(l, v)
}
func easyjson40dcd6ddDecodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp2(in *jlexer.Lexer, out *userChangeInfoResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson40dcd6ddEncodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp2(out *jwriter.Writer, in userChangeInfoResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.String(string(in.Status))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v userChangeInfoResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson40dcd6ddEncodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp2(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *userChangeInfoResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson40dcd6ddDecodeGithubComGoParkMailRu20231TechnokaifInternalPkgUserDeliveryHttp2(l, v)
}
