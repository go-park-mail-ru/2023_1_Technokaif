on: 
  push:
    branches:
      - main
      - F3-2_CI

env:
  tag: ${GITHUB_REF##*/}_${GITHUB_SHA::8}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Formatting
        run: gofmt -s -w -d . && git diff --exit-code

      - name: Verify dependencies
        run: go mod verify

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3

      - name: go-vet
        run: go vet ./...

  test:
    runs-on: ubuntu-latest
    needs: check
    steps:
    - uses: actions/checkout@v3 
    - uses: actions/setup-go@v3
      with:
        go-version: '1.20'

    - run: make check_html_coverage
    - name: Upload coverage
      uses: actions/upload-artifact@v3
      with:
        path: ./cover.html


  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build Docker image
        run: TAG=${{ env.tag }} ./scripts/deploy/build_all.sh
      - name: Push the image
        run: TAG=${{ env.tag }} ./scripts/deploy/push.sh


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: pull docker images
        uses: appleboy/ssh-action@master
        with:
          envs: 
            GITHUB_SHA
            GITHUB_REF
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/backend/2023_1_Technokaif
            sudo TAG=${{ env.tag }} docker-compose pull

      - name: deploy docker images
        uses: appleboy/ssh-action@master
        with:
          envs: 
            GITHUB_SHA
            GITHUB_REF
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/backend/2023_1_Technokaif
            sudo TAG=${{ env.tag }} docker-compose down
            sudo TAG=${{ env.tag }} docker-compose up -d
            sudo docker system prune -f
            