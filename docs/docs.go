// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/albums/": {
            "post": {
                "description": "Create new album by sent object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Create Album",
                "parameters": [
                    {
                        "description": "album info",
                        "name": "album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.albumCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album created",
                        "schema": {
                            "$ref": "#/definitions/http.albumCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/albums/feed": {
            "get": {
                "description": "Feed albums",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Album Feed",
                "responses": {
                    "200": {
                        "description": "Albums feed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AlbumTransfer"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/albums/{albumID}/": {
            "get": {
                "description": "Get album with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Get Album",
                "responses": {
                    "200": {
                        "description": "Album got",
                        "schema": {
                            "$ref": "#/definitions/models.AlbumTransfer"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete album with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Delete Album",
                "responses": {
                    "200": {
                        "description": "Album deleted",
                        "schema": {
                            "$ref": "#/definitions/http.albumDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/albums/{albumID}/tracks": {
            "get": {
                "description": "All tracks of album with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Album"
                ],
                "summary": "Tracks of Album",
                "responses": {
                    "200": {
                        "description": "Show tracks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/artists/": {
            "post": {
                "description": "Create new artist by sent object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Create Artist",
                "parameters": [
                    {
                        "description": "Track info",
                        "name": "artist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.artistCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist created",
                        "schema": {
                            "$ref": "#/definitions/http.artistCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_artist_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_artist_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/artists/feed": {
            "get": {
                "description": "Feed artists",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Artist Feed",
                "responses": {
                    "200": {
                        "description": "Artists feed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ArtistTransfer"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_artist_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/artists/{artistID}/": {
            "get": {
                "description": "Get artist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Get Artist",
                "responses": {
                    "200": {
                        "description": "Artist got",
                        "schema": {
                            "$ref": "#/definitions/models.ArtistTransfer"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_artist_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_artist_delivery_http.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete artist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Delete Artist",
                "responses": {
                    "200": {
                        "description": "Artist deleted",
                        "schema": {
                            "$ref": "#/definitions/http.artistDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_artist_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_artist_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/artists/{artistID}/albums": {
            "get": {
                "description": "All albums of artist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Albums of Artist",
                "responses": {
                    "200": {
                        "description": "Show albums",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AlbumTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_album_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/artists/{artistID}/tracks": {
            "get": {
                "description": "All tracks of artist with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Tracks of Artist",
                "responses": {
                    "200": {
                        "description": "Show tracks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign In",
                "parameters": [
                    {
                        "description": "username and password",
                        "name": "userInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.loginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/http.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_auth_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_auth_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "description": "Logout account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log Out",
                "responses": {
                    "200": {
                        "description": "User loged out",
                        "schema": {
                            "$ref": "#/definitions/http.logoutResponse"
                        }
                    },
                    "400": {
                        "description": "Logout fail",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_auth_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_auth_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/signup": {
            "post": {
                "description": "Create account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign Up",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/http.signUpResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_auth_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_auth_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/tracks/": {
            "post": {
                "description": "Create new track by sent object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Create Track",
                "parameters": [
                    {
                        "description": "Track info",
                        "name": "track",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.trackCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track created",
                        "schema": {
                            "$ref": "#/definitions/http.trackCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/tracks/feed": {
            "get": {
                "description": "Feed tracks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Track Feed",
                "responses": {
                    "200": {
                        "description": "Tracks feed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackTransfer"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/tracks/{trackID}/": {
            "get": {
                "description": "Get track with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Get Track",
                "responses": {
                    "200": {
                        "description": "Track got",
                        "schema": {
                            "$ref": "#/definitions/models.TrackTransfer"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete track with chosen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track"
                ],
                "summary": "Delete Track",
                "responses": {
                    "200": {
                        "description": "Track deleted",
                        "schema": {
                            "$ref": "#/definitions/http.trackDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal_pkg_track_delivery_http.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.albumCreateInput": {
            "type": "object",
            "properties": {
                "artistsID": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cover": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.albumCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.albumDeleteResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.artistCreateInput": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.artistCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.artistDeleteResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.loginInput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "http.loginResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                }
            }
        },
        "http.logoutResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.signUpResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.trackCreateInput": {
            "type": "object",
            "properties": {
                "albumID": {
                    "type": "integer"
                },
                "artistsID": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cover": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "record": {
                    "type": "string"
                }
            }
        },
        "http.trackCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.trackDeleteResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_pkg_album_delivery_http.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_pkg_artist_delivery_http.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_pkg_auth_delivery_http.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_pkg_track_delivery_http.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.AlbumTransfer": {
            "type": "object",
            "properties": {
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArtistTransfer"
                    }
                },
                "cover": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ArtistTransfer": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Date": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "models.Sex": {
            "type": "string",
            "enum": [
                "M",
                "F",
                "O"
            ],
            "x-enum-varnames": [
                "Male",
                "Female",
                "Other"
            ]
        },
        "models.TrackTransfer": {
            "type": "object",
            "properties": {
                "albumID": {
                    "description": "TODO discuss",
                    "type": "integer"
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArtistTransfer"
                    }
                },
                "cover": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "record": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "birthDate": {
                    "$ref": "#/definitions/models.Date"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "sex": {
                    "$ref": "#/definitions/models.Sex"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.1",
	Host:             "localhost:4443",
	BasePath:         "/api/albums/feed",
	Schemes:          []string{},
	Title:            "Fluire API",
	Description:      "Server API for Fluire Streaming Service Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
