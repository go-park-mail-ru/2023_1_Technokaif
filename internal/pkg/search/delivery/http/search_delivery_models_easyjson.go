// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package delivery

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp(in *jlexer.Lexer, out *searchTracksResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "tracks":
			(out.Tracks).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp(out *jwriter.Writer, in searchTracksResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"tracks\":"
		out.RawString(prefix[1:])
		(in.Tracks).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v searchTracksResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *searchTracksResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp(l, v)
}
func easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp1(in *jlexer.Lexer, out *searchRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "query":
			out.Query = string(in.String())
		case "amount":
			out.Amount = uint32(in.Uint32())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp1(out *jwriter.Writer, in searchRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"query\":"
		out.RawString(prefix[1:])
		out.String(string(in.Query))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Uint32(uint32(in.Amount))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v searchRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp1(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *searchRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp1(l, v)
}
func easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp2(in *jlexer.Lexer, out *searchPlaylistsResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "playlists":
			(out.Playlists).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp2(out *jwriter.Writer, in searchPlaylistsResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"playlists\":"
		out.RawString(prefix[1:])
		(in.Playlists).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v searchPlaylistsResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp2(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *searchPlaylistsResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp2(l, v)
}
func easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp3(in *jlexer.Lexer, out *searchArtistsResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "artists":
			(out.Artists).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp3(out *jwriter.Writer, in searchArtistsResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"artists\":"
		out.RawString(prefix[1:])
		(in.Artists).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v searchArtistsResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp3(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *searchArtistsResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp3(l, v)
}
func easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp4(in *jlexer.Lexer, out *searchAlbumsResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "albums":
			(out.Albums).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp4(out *jwriter.Writer, in searchAlbumsResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"albums\":"
		out.RawString(prefix[1:])
		(in.Albums).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v searchAlbumsResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonE86c8d54EncodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp4(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *searchAlbumsResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonE86c8d54DecodeGithubComGoParkMailRu20231TechnokaifInternalPkgSearchDeliveryHttp4(l, v)
}
