syntax = "proto3";

package auth;
option go_package = "microservices/auth/proto";

message Void {}

message Error {
	uint32 code = 1; 
}

message SignUpMsg {
	string username = 1; // @gotags: json:"username" valid:"required,runelength(4|20)" db:"username"
	string email = 2; // @gotags: json:"email" valid:"required,email,maxstringlength(255)" db:"email"
	string password = 3; // @gotags: json:"password" valid:"required,runelength(8|30),passwordcheck" db:"password_hash"
	string firstName = 4; // @gotags: json:"firstName" valid:"required,runelength(2|20)" db:"first_name"
	string lastName = 5; // @gotags: json:"lastName" valid:"required,runelength(2|20)" db:"last_name"
	string sex = 6; // @gotags: json:"sex" valid:"required,in(F|M|O)" db:"sex"
	string birthDate = 7; // @gotags: json:"birthDate" valid:"required,born" db:"birth_date"
}

message SignUpResponse {
    uint32 userID = 1;

	// Error error = 2;
}

message Creds {
	string username = 1;
	string password = 2;
}

message AuthData {
    uint32 id = 1;
    uint32 version = 2;
}

message UserResponse {
    uint32 id = 1; // @gotags: json:"id"
	uint32 version = 2;
    string username = 3; // @gotags: json:"username"
	string email = 4; // @gotags: json:"email"
	string passwordHash = 5; // @gotags: json:"password"
	string firstName = 6; // @gotags: json:"firstName"
	string lastName = 7; // @gotags: json:"lastName"
	string sex = 8; // @gotags: json:"sex"
	string birthDate = 9; // @gotags: json:"birthDate"
	string avatarSrc = 10; // @gotags: json:"avatarSrc"

	// Error error = 11;
}

message IncreaseUserVersionMsg {
	uint32 userId = 1;
}

message ChangePassMsg {
	uint32 userId = 1;
	string plainPassword = 2;
}

service Authorization {
    rpc SignUpUser(SignUpMsg) returns (SignUpResponse) {};
	rpc GetUserByCreds(Creds) returns (UserResponse) {};
	rpc GetUserByAuthData(AuthData) returns (UserResponse) {};
	rpc IncreaseUserVersion(IncreaseUserVersionMsg) returns (Void) {};
	rpc ChangePassword(ChangePassMsg) returns (Void) {};
}
