syntax = "proto3";

package user;
option go_package = "microservices/user/proto";



/* message UserResponse {
    uint32 id = 1; // @gotags: json:"id"
	uint32 version = 2;
    string username = 3; // @gotags: json:"username"
	string email = 4; // @gotags: json:"email"
	string passwordHash = 5; // @gotags: json:"password"
	string firstName = 6; // @gotags: json:"firstName"
	string lastName = 7; // @gotags: json:"lastName"
	string sex = 8; // @gotags: json:"sex"
	string birthDate = 9; // @gotags: json:"birthDate"
	string avatarSrc = 10; // @gotags: json:"avatarSrc"
}


GetByID(ctx context.Context, userID uint32) (*models.User, error)
UpdateInfo(ctx context.Context, user *models.User) error
UploadAvatar(ctx context.Context, userID uint32, file io.ReadSeeker, fileExtension string) error
GetByPlaylist(ctx context.Context, playlistID uint32) ([]models.User, error)

service Authorization {
    rpc GetByID(SignUpMsg) returns (SignUpResponse) {};
	rpc GetUserByCreds(Creds) returns (UserResponse) {};
	rpc GetUserByAuthData(AuthData) returns (UserResponse) {};
	rpc IncreaseUserVersion(IncreaseUserVersionMsg) returns (IncreaseUserVersionResponse) {};
	rpc ChangePassword(ChangePassMsg) returns (ChangePassResponse) {};
} */


